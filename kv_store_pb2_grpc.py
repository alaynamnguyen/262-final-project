# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import kv_store_pb2 as kv__store__pb2


class KeyValueStoreStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Set = channel.unary_unary(
                '/kvstore.KeyValueStore/Set',
                request_serializer=kv__store__pb2.SetRequest.SerializeToString,
                response_deserializer=kv__store__pb2.SetResponse.FromString,
                )
        self.Get = channel.unary_unary(
                '/kvstore.KeyValueStore/Get',
                request_serializer=kv__store__pb2.GetRequest.SerializeToString,
                response_deserializer=kv__store__pb2.GetResponse.FromString,
                )
        self.Delete = channel.unary_unary(
                '/kvstore.KeyValueStore/Delete',
                request_serializer=kv__store__pb2.DeleteRequest.SerializeToString,
                response_deserializer=kv__store__pb2.DeleteResponse.FromString,
                )
        self.RegisterReplica = channel.unary_unary(
                '/kvstore.KeyValueStore/RegisterReplica',
                request_serializer=kv__store__pb2.RegisterReplicaRequest.SerializeToString,
                response_deserializer=kv__store__pb2.RegisterReplicaResponse.FromString,
                )
        self.Heartbeat = channel.unary_unary(
                '/kvstore.KeyValueStore/Heartbeat',
                request_serializer=kv__store__pb2.HeartbeatRequest.SerializeToString,
                response_deserializer=kv__store__pb2.HeartbeatResponse.FromString,
                )
        self.PushReplicaList = channel.unary_unary(
                '/kvstore.KeyValueStore/PushReplicaList',
                request_serializer=kv__store__pb2.ReplicaListRequest.SerializeToString,
                response_deserializer=kv__store__pb2.ReplicaListResponse.FromString,
                )


class KeyValueStoreServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Set(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterReplica(self, request, context):
        """Register new replica to shard leader
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Heartbeat(self, request, context):
        """Heartbeat between shard leader and shard replica
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PushReplicaList(self, request, context):
        """Push current replica list from shard leader to replica
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_KeyValueStoreServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Set': grpc.unary_unary_rpc_method_handler(
                    servicer.Set,
                    request_deserializer=kv__store__pb2.SetRequest.FromString,
                    response_serializer=kv__store__pb2.SetResponse.SerializeToString,
            ),
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=kv__store__pb2.GetRequest.FromString,
                    response_serializer=kv__store__pb2.GetResponse.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=kv__store__pb2.DeleteRequest.FromString,
                    response_serializer=kv__store__pb2.DeleteResponse.SerializeToString,
            ),
            'RegisterReplica': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterReplica,
                    request_deserializer=kv__store__pb2.RegisterReplicaRequest.FromString,
                    response_serializer=kv__store__pb2.RegisterReplicaResponse.SerializeToString,
            ),
            'Heartbeat': grpc.unary_unary_rpc_method_handler(
                    servicer.Heartbeat,
                    request_deserializer=kv__store__pb2.HeartbeatRequest.FromString,
                    response_serializer=kv__store__pb2.HeartbeatResponse.SerializeToString,
            ),
            'PushReplicaList': grpc.unary_unary_rpc_method_handler(
                    servicer.PushReplicaList,
                    request_deserializer=kv__store__pb2.ReplicaListRequest.FromString,
                    response_serializer=kv__store__pb2.ReplicaListResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'kvstore.KeyValueStore', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class KeyValueStore(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Set(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kvstore.KeyValueStore/Set',
            kv__store__pb2.SetRequest.SerializeToString,
            kv__store__pb2.SetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kvstore.KeyValueStore/Get',
            kv__store__pb2.GetRequest.SerializeToString,
            kv__store__pb2.GetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kvstore.KeyValueStore/Delete',
            kv__store__pb2.DeleteRequest.SerializeToString,
            kv__store__pb2.DeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterReplica(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kvstore.KeyValueStore/RegisterReplica',
            kv__store__pb2.RegisterReplicaRequest.SerializeToString,
            kv__store__pb2.RegisterReplicaResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Heartbeat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kvstore.KeyValueStore/Heartbeat',
            kv__store__pb2.HeartbeatRequest.SerializeToString,
            kv__store__pb2.HeartbeatResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PushReplicaList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kvstore.KeyValueStore/PushReplicaList',
            kv__store__pb2.ReplicaListRequest.SerializeToString,
            kv__store__pb2.ReplicaListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
